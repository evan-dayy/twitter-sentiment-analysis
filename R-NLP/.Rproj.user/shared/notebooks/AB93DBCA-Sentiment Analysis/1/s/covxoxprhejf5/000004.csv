"0","paste('there are total', nrow(byhour_text_df), 'observation')"
"1","[1]"
"1"," ""there are total 194 observation"""
"1","
"
"0","tidy_books <- text_df %>%"
"0","        unnest_tokens(word, text)%>% # separate words "
"0","        anti_join(stop_words) ## omit the stop words "
"2","Joining, by = ""word""
"
"0","bing<- get_sentiments(""bing"")"
"0","sentment_bing = tidy_books %>%"
"0","        inner_join(bing) %>%"
"0","        count(date, time, word, sentiment) %>%"
"0","        spread(sentiment, n, fill = 0) %>%"
"0","        mutate(sentiment = positive - negative) %>% "
"0","        group_by(date, time) %>%"
"0","        summarise(sentiment = sum(sentiment))"
"2","Joining, by = ""word""
"
"2","`summarise()` regrouping output by 'date' (override with `.groups` argument)
"
"0","sentment_bing$sentiment = normalize(sentment_bing$sentiment)"
"0","afinn<- get_sentiments(""afinn"")"
"0","sentment_afinn = tidy_books %>%"
"0","        inner_join(afinn) %>%"
"0","        group_by(date, time) %>%"
"0","        summarise(sentiment = sum(value))"
"2","Joining, by = ""word""
"
"2","`summarise()` regrouping output by 'date' (override with `.groups` argument)
"
"0","sentment_afinn$sentiment = normalize(sentment_afinn$sentiment)"
"0","nrc<- get_sentiments(""nrc"")"
"0","sentment_nrc = tidy_books %>%"
"0","        inner_join(nrc) %>%"
"0","        count(date, time, word, sentiment) %>%"
"0","        spread(sentiment, n, fill = 0) %>%"
"0","        select(-word)%>%"
"0","        group_by(date, time) %>%"
"0","        summarise_all(sum)"
"2","Joining, by = ""word""
"
"0","stock_GOOG = read_excel('update.xlsx', sheet = 'goog') # read the stock Information "
"0","stock_GOOG = stock_GOOG[,c(3,2)]"
"0","stock_GOOG$time = as.character(stock_GOOG$time )"
"0","stock_GOOG$time = strptime(gsub('T', "" "","
"0","                                substr(stock_GOOG$time,1,13)), "
"0","                           format = ""%Y-%m-%d %H"") # time gap with hour"
"0","stock_GOOG$time = as.character(stock_GOOG$time )"
"0","stock = stock_GOOG %>% arrange(time)"
"0","stock$price = normalize(stock$price)"
"0",""
"0","## build the data frame ----------"
"0","## for nrc:"
"0","colnames(stock)[1] = 'datetime'"
"0","stock$date = as.Date(stock$datetime, format = ""%Y-%m-%d"")"
"0","stock$datetime = as.POSIXct(stock$datetime)"
"0","stock$time_stock = format(stock$datetime, format = '%H:%M')"
"0","stock = stock[order(stock$datetime, decreasing = FALSE),]"
"0",""
"0","colnames(sentment_nrc)[2] = 'datetime'"
"0","sentment_nrc$datetime = as.POSIXct(sentment_nrc$datetime)"
"0","sentment_nrc$time_se = format(sentment_nrc$datetime, format = '%H:%M')"
"0","full_nrc = full_join(stock,sentment_nrc)"
"2","Joining, by = c(""datetime"", ""date"")
"
"0","# figure out whether it is close or open time"
"0","full_nrc$time_stock = ifelse(is.na(full_nrc$time_stock), "
"0","                             full_nrc$time_se, full_nrc$time_stock) "
"0","full_nrc = full_nrc[,-15]"
"0","opentime = ""09:00"""
"0","closetime = ""16:00"""
"0","full_nrc$state = ifelse((strptime(full_nrc$time_stock, format = '%H:%M') >= strptime(opentime, format = '%H:%M')) & (strptime(full_nrc$time_stock, format = '%H:%M') <= strptime(closetime, format = '%H:%M')), 'open', 'close' )"
"0","full_nrc_close =  full_nrc%>%"
"0","        filter(state == 'close')"
"0","full_nrc_close = na.omit(full_nrc_close)"
"0","head(full_nrc_close)"
